{
  "swagger": "2.0",
  "info": {
    "version": "1.0.0",
    "title": "Chat APP",
    "description": "Documentation automatically generated by the <b>swagger-autogen</b> module."
  },
  "host": "localhost:8080",
  "basePath": "/",
  "tags": [],
  "schemes": [
    "http",
    "https"
  ],
  "securityDefinitions": {
    "apiKeyAuth": {
      "type": "apiKey",
      "in": "header",
      "name": "Authorization",
      "description": "Auth Token"
    }
  },
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "paths": {
    "/auth/login": {
      "post": {
        "tags": [
          "Login"
        ],
        "description": "Endpoint to login as a user",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "Login information.",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "email": {
                  "type": "string",
                  "example": "jhondoe@gmail.com"
                },
                "password": {
                  "type": "string",
                  "example": "encryptedPassword"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "schema": {
              "type": "object",
              "properties": {
                "auth": {
                  "type": "boolean",
                  "example": true
                },
                "token": {
                  "type": "string",
                  "example": "string"
                },
                "user": {
                  "$ref": "#/definitions/User"
                }
              },
              "xml": {
                "name": "main"
              }
            },
            "description": "Login realizado com sucesso."
          },
          "400": {
            "schema": {
              "$ref": "#/definitions/Errors"
            },
            "description": "Invalid params"
          },
          "404": {
            "schema": {
              "$ref": "#/definitions/Errors"
            },
            "description": "User not found"
          },
          "422": {
            "description": "DataBase Error"
          }
        }
      }
    },
    "/auth/signup": {
      "post": {
        "tags": [
          "Login"
        ],
        "description": "Endpoint to create a Login",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "SignUp information.",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "name": {
                  "type": "string",
                  "example": "Jhon Doe"
                },
                "email": {
                  "type": "string",
                  "example": "jhondoe@gmail.com"
                },
                "password": {
                  "type": "string",
                  "example": "encryptedPassword"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "schema": {
              "type": "object",
              "properties": {
                "auth": {
                  "type": "boolean",
                  "example": true
                },
                "token": {
                  "type": "string",
                  "example": "string"
                },
                "user": {
                  "$ref": "#/definitions/User"
                }
              },
              "xml": {
                "name": "main"
              }
            },
            "description": "Login realizado com sucesso."
          },
          "404": {
            "schema": {
              "$ref": "#/definitions/Errors"
            },
            "description": "Error on decode token"
          }
        }
      }
    },
    "/api/room": {
      "get": {
        "tags": [
          "Room"
        ],
        "description": "Endpoint to get all users",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "description": "Quantity of users. (default is 50)",
            "type": "string"
          },
          {
            "name": "offset",
            "in": "query",
            "description": "Start before x users. (default is 0)",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/Rooms"
            },
            "description": "Room updated successfully."
          },
          "400": {
            "schema": {
              "$ref": "#/definitions/Errors"
            },
            "description": "Invalid params"
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "schema": {
              "$ref": "#/definitions/Errors"
            },
            "description": "Room not found"
          },
          "422": {
            "description": "DataBase Error"
          }
        },
        "security": [
          {
            "apiKeyAuth": []
          }
        ]
      },
      "post": {
        "tags": [
          "Room"
        ],
        "description": "Endpoint to create a user",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "Room information.",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "name": {
                  "type": "string",
                  "example": "Jhon Doe"
                },
                "email": {
                  "type": "string",
                  "example": "jhondoe@gmail.com"
                },
                "password": {
                  "type": "string",
                  "example": "encryptedPassword"
                }
              },
              "required": [
                "name",
                "email",
                "password"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/Room"
            },
            "description": "Room created successfully."
          },
          "400": {
            "schema": {
              "$ref": "#/definitions/Errors"
            },
            "description": "Invalid params"
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "schema": {
              "$ref": "#/definitions/Errors"
            },
            "description": "Room not found"
          },
          "422": {
            "description": "DataBase Error"
          }
        },
        "security": [
          {
            "apiKeyAuth": []
          }
        ]
      },
      "put": {
        "tags": [
          "Room"
        ],
        "description": "Endpoint to change a user information",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "Room information.",
            "schema": {
              "type": "object",
              "properties": {
                "id": {
                  "type": "number",
                  "example": 1
                },
                "name": {
                  "type": "string",
                  "example": "Jhon Doe"
                },
                "email": {
                  "type": "string",
                  "example": "jhondoe@gmail.com"
                }
              },
              "required": [
                "id"
              ]
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/Room"
            },
            "description": "Get rooms was successfull."
          },
          "400": {
            "schema": {
              "$ref": "#/definitions/Errors"
            },
            "description": "Invalid params"
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "schema": {
              "$ref": "#/definitions/Errors"
            },
            "description": "Room not found"
          },
          "422": {
            "description": "DataBase Error"
          }
        },
        "security": [
          {
            "apiKeyAuth": []
          }
        ]
      },
      "delete": {
        "tags": [
          "Room"
        ],
        "description": "Endpoint to delete a user",
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "description": "Room id.",
            "type": "integer",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "schema": {
              "type": "string",
              "example": "string",
              "xml": {
                "name": "main"
              }
            },
            "description": "Room deleted successfully."
          },
          "400": {
            "schema": {
              "$ref": "#/definitions/Errors"
            },
            "description": "Invalid params"
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "schema": {
              "$ref": "#/definitions/Errors"
            },
            "description": "Room not found"
          },
          "422": {
            "description": "DataBase Error"
          }
        },
        "security": [
          {
            "apiKeyAuth": []
          }
        ]
      }
    },
    "/api/Message": {
      "get": {
        "tags": [
          "Message"
        ],
        "description": "Endpoint to get all users",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "description": "Quantity of users. (default is 50)",
            "type": "string"
          },
          {
            "name": "offset",
            "in": "query",
            "description": "Start before x users. (default is 0)",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/Messages"
            },
            "description": "Get messages was successfull."
          },
          "400": {
            "schema": {
              "$ref": "#/definitions/Errors"
            },
            "description": "Invalid params"
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "schema": {
              "$ref": "#/definitions/Errors"
            },
            "description": "Message not found"
          },
          "422": {
            "description": "DataBase Error"
          }
        },
        "security": [
          {
            "apiKeyAuth": []
          }
        ]
      },
      "post": {
        "tags": [
          "Message"
        ],
        "description": "Endpoint to create a user",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "Message information.",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "name": {
                  "type": "string",
                  "example": "Jhon Doe"
                },
                "email": {
                  "type": "string",
                  "example": "jhondoe@gmail.com"
                },
                "password": {
                  "type": "string",
                  "example": "encryptedPassword"
                }
              },
              "required": [
                "name",
                "email",
                "password"
              ]
            }
          }
        ],
        "responses": {
          "401": {
            "description": "Unauthorized"
          }
        },
        "security": [
          {
            "apiKeyAuth": []
          }
        ]
      }
    }
  },
  "definitions": {
    "Errors": {
      "type": "object",
      "properties": {
        "errors": {
          "type": "object",
          "properties": {
            "message": {
              "type": "string",
              "example": "string"
            },
            "errCode": {
              "type": "string",
              "example": "string"
            }
          }
        }
      }
    },
    "User": {
      "type": "object",
      "properties": {
        "id": {
          "type": "number",
          "example": 1
        },
        "name": {
          "type": "string",
          "example": "Joe doe"
        },
        "email": {
          "type": "string",
          "example": "teste@email.com"
        },
        "createdAt": {
          "type": "string",
          "example": "2021-03-23T16:58:30.000Z"
        }
      }
    },
    "Room": {
      "type": "object",
      "properties": {
        "id": {
          "type": "number",
          "example": 1
        },
        "name": {
          "type": "string",
          "example": "Joe doe"
        },
        "description": {
          "type": "string",
          "example": "Descricao da sala"
        },
        "owner_id": {
          "type": "number",
          "example": 1
        },
        "user_to_id": {
          "type": "number",
          "example": 2
        },
        "createdAt": {
          "type": "string",
          "example": "2021-03-23T16:58:30.000Z"
        }
      }
    },
    "Rooms": {
      "type": "array",
      "items": {
        "$ref": "#/definitions/Room"
      }
    },
    "Message": {
      "type": "object",
      "properties": {
        "id": {
          "type": "number",
          "example": 1
        },
        "name": {
          "type": "string",
          "example": "Joe doe"
        },
        "email": {
          "type": "string",
          "example": "teste@email.com"
        },
        "createdAt": {
          "type": "string",
          "example": "2021-03-23T16:58:30.000Z"
        }
      }
    },
    "Messages": {
      "type": "array",
      "items": {
        "$ref": "#/definitions/Message"
      }
    }
  }
}